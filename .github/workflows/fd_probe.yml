name: NT Rhythm — FD Probe to Pulse

on:
  workflow_dispatch:
    inputs:
      source:
        description: 'Data source (synthetic | jhtdb | nasa)'
        required: true
        default: 'synthetic'
      dataset:
        description: 'Dataset name/slug or path (free text; will be auto-sanitized for filenames)'
        required: true
        default: 'demo'
      var:
        description: 'Variable name'
        required: true
        default: 'u'
      xyz:
        description: 'Probe point as x,y,z'
        required: true
        default: '0.1,0.1,0.1'
      twin:
        description: 'Time window as t0,t1,dt'
        required: true
        default: '0.0,10.0,0.01'
      title:
        description: 'Pulse title'
        required: true
        default: 'NT Rhythm — FD Probe'
      tags:
        description: 'Space-separated tags'
        required: true
        default: 'nt_rhythm turbulence navier_stokes rgp'

permissions:
  contents: write

jobs:
  probe:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install deps
        run: |
          python -m pip install --upgrade pip pyyaml numpy

      # 1) Sanitize dataset to a safe slug
      - name: Resolve slug
        id: inp
        shell: python
        run: |
          import os, re
          def safe_slug(s:str)->str:
              s = (s or "").strip().lower()
              s = re.sub(r"[^a-z0-9._-]+","_", s)
              s = re.sub(r"_+","_", s).strip("_")
              return s or "dataset"
          ds_in = os.environ["DATASET_IN"]
          slug = safe_slug(ds_in)
          print(f"::notice::Using dataset slug = {slug}")
          with open(os.environ["GITHUB_OUTPUT"], "a") as f:
              f.write(f"slug={slug}\n")
        env:
          DATASET_IN: ${{ github.event.inputs.dataset }}

      # 2) Compute next batch number for this slug
      - name: Compute batch number
        id: batch
        shell: bash
        run: |
          set -euo pipefail
          slug="${{ steps.inp.outputs.slug }}"
          mkdir -p results/fd_probe
          count=$(ls -1 results/fd_probe | grep -E "^${slug}(__batch[0-9]+)?\.metrics\.json$" || true | wc -l)
          # If no legacy file and no batch yet, next is 1; otherwise next = count + 1
          next=$((count + 1))
          echo "Next batch for ${slug} is ${next}"
          echo "num=${next}" >> "$GITHUB_OUTPUT"

      # 3) Run FD probe and write metrics with batch suffix
      - name: Run FD probe
        env:
          PYTHONPATH: ${{ github.workspace }}
          JHTDB_OFFLINE: ${{ secrets.JHTDB_OFFLINE }}
          JHTDB_TOKEN: ${{ secrets.JHTDB_TOKEN }}
          NASA_CSV: ${{ secrets.NASA_CSV }}
        run: |
          mkdir -p results/fd_probe
          slug="${{ steps.inp.outputs.slug }}"
          batch="${{ steps.batch.outputs.num }}"
          json_out="results/fd_probe/${slug}__batch${batch}.metrics.json"
          python tools/fd_connectors/run_fd_probe.py \
            --source "${{ github.event.inputs.source }}" \
            --dataset "${slug}" \
            --dataset-raw "${{ github.event.inputs.dataset }}" \
            --var "${{ github.event.inputs.var }}" \
            --xyz "${{ github.event.inputs.xyz }}" \
            --twin "${{ github.event.inputs.twin }}" \
            --json-out "${json_out}"

          echo "JSON_OUT=${json_out}" >> $GITHUB_ENV
          echo "DATASET_WITH_BATCH=${slug}__batch${batch}" >> $GITHUB_ENV

      # 4) Emit strict Φ-Mesh pulse (date + slug__batchN)
      - name: Emit pulse YAML
        run: |
          python tools/agent_rhythm/make_pulse.py \
            --metrics "${{ env.JSON_OUT }}" \
            --title   "${{ github.event.inputs.title }}" \
            --dataset "${{ env.DATASET_WITH_BATCH }}" \
            --tags    "${{ github.event.inputs.tags }}" \
            --outdir  pulse/auto

      # 5) Rebuild maps
      - name: Rebuild maps
        run: |
          python generate_graph_data.py \
            --pulse-glob "pulse/**/*.yml" \
            --alias-map meta/aliases.yml \
            --tag-descriptions meta/tag_descriptions.yml \
            --out-js docs/data.js

      # 6) Commit & push
      - name: Commit & push
        run: |
          git config user.name "phi-mesh-bot"
          git config user.email "actions@users.noreply.github.com"
          git add -A
          git commit -m "auto: FD probe (${{ env.DATASET_WITH_BATCH }}) pulse + updated maps" || echo "nothing to commit"
          git push || true
