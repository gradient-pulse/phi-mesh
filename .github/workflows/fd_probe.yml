name: NT Rhythm — FD Probe to Pulse

on:
  workflow_dispatch:
    inputs:
      source:
        description: 'Data source (synthetic | jhtdb | nasa)'
        required: true
        default: 'synthetic'
      dataset:
        description: 'Dataset name or slug (free text; will be auto-sanitized)'
        required: true
        default: 'demo'
      var:
        description: 'Variable name'
        required: true
        default: 'u'
      xyz:
        description: 'Probe point as x,y,z'
        required: true
        default: '0.1,0.1,0.1'
      twin:
        description: 'Time window as t0,t1,dt'
        required: true
        default: '0.0,10.0,0.01'
      title:
        description: 'Pulse title'
        required: true
        default: 'NT Rhythm — FD Probe'
      tags:
        description: 'Space-separated tags'
        required: true
        default: 'nt_rhythm turbulence navier_stokes rgp'

permissions:
  contents: write

jobs:
  probe:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install pyyaml numpy

      # Sanitize dataset slug + compute next batchN for (today, dataset, source)
      - name: Resolve inputs & compute batch
        id: prep
        shell: python
        env:
          SRC: ${{ github.event.inputs.source }}
          DATASET_IN: ${{ github.event.inputs.dataset }}
        run: |
          import os, re, datetime as dt, pathlib
          def safe_slug(s:str)->str:
              s = (s or "").strip().lower()
              s = re.sub(r"[^a-z0-9._-]+","_", s)
              s = re.sub(r"_+","_", s).strip("_")
              return s or "dataset"
          source_slug = safe_slug(os.environ["SRC"])
          slug = safe_slug(os.environ["DATASET_IN"])
          today = dt.date.today().isoformat()

          outdir = pathlib.Path("results/fd_probe")
          outdir.mkdir(parents=True, exist_ok=True)

          # Find existing batches for today's (dataset, source)
          pat = f"{today}_{slug}_{source_slug}_batch*.metrics.json"
          existing = list(outdir.glob(pat))
          maxb = 0
          for p in existing:
              m = re.search(r"_batch(\d+)\.metrics\.json$", p.name)
              if m:
                  maxb = max(maxb, int(m.group(1)))
          batch = maxb + 1

          json_out = outdir / f"{today}_{slug}_{source_slug}_batch{batch}.metrics.json"

          with open(os.environ["GITHUB_OUTPUT"], "a") as f:
              f.write(f"slug={slug}\n")
              f.write(f"source_slug={source_slug}\n")
              f.write(f"today={today}\n")
              f.write(f"batch={batch}\n")
              f.write(f"json_out={json_out.as_posix()}\n")

          print(f"::notice::Using slug={slug}, source={source_slug}, today={today}, batch={batch}")
          print(f"::notice::Metrics will be written to: {json_out}")

      - name: Run FD probe
        env:
          PYTHONPATH: ${{ github.workspace }}
          # Optional/offline flags/tokens (present if set in repo secrets)
          JHTDB_OFFLINE: ${{ secrets.JHTDB_OFFLINE }}
          JHTDB_TOKEN:   ${{ secrets.JHTDB_TOKEN }}
          NASA_CSV:      ${{ secrets.NASA_CSV }}
        run: |
          python tools/fd_connectors/run_fd_probe.py \
            --source "${{ github.event.inputs.source }}" \
            --dataset "${{ steps.prep.outputs.slug }}" \
            --var "${{ github.event.inputs.var }}" \
            --xyz "${{ github.event.inputs.xyz }}" \
            --twin "${{ github.event.inputs.twin }}" \
            --json-out "${{ steps.prep.outputs.json_out }}" \
            --title "${{ github.event.inputs.title }}" \
            --tags "${{ github.event.inputs.tags }}"

      - name: Emit pulse YAML (includes batchN in filename)
        run: |
          python tools/agent_rhythm/make_pulse.py \
            --metrics "${{ steps.prep.outputs.json_out }}" \
            --title   "${{ github.event.inputs.title }}" \
            --dataset "${{ steps.prep.outputs.slug }}_${{ steps.prep.outputs.source_slug }}_batch${{ steps.prep.outputs.batch }}" \
            --tags    "${{ github.event.inputs.tags }}" \
            --outdir  pulse/auto

      - name: Rebuild maps
        run: |
          python generate_graph_data.py \
            --pulse-glob "pulse/**/*.yml" \
            --alias-map meta/aliases.yml \
            --tag-descriptions meta/tag_descriptions.yml \
            --out-js docs/data.js

      - name: Commit & push
        run: |
          git config user.name "phi-mesh-bot"
          git config user.email "actions@users.noreply.github.com"
          git add -A
          git commit -m "auto: FD probe (${{ steps.prep.outputs.slug }} / ${{ steps.prep.outputs.source_slug }} batch ${{ steps.prep.outputs.batch }}) pulse + updated maps" || echo "nothing to commit"
          git push || true
