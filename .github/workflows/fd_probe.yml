name: NT Rhythm — FD Probe to Pulse

on:
  workflow_dispatch:
    inputs:
      source:
        description: 'Data source (synthetic | jhtdb | nasa)'
        required: true
        default: 'synthetic'
      dataset:
        description: 'Dataset name/slug or path (free text; will be auto-sanitized)'
        required: true
        default: 'demo'
      var:
        description: 'Variable name'
        required: true
        default: 'u'
      xyz:
        description: 'Probe point as x,y,z'
        required: true
        default: '0.1,0.1,0.1'
      twin:
        description: 'Time window as t0,t1,dt'
        required: true
        default: '0.0,10.0,0.01'
      title:
        description: 'Pulse title'
        required: true
        default: 'NT Rhythm — FD Probe'
      tags:
        description: 'Space-separated tags'
        required: true
        default: 'nt_rhythm turbulence navier_stokes rgp'

permissions:
  contents: write

jobs:
  probe:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install deps
        run: |
          python -m pip install --upgrade pip pyyaml numpy

      # Sanitize dataset into a safe slug and build a consistent "<slug>__<source>" id
      - name: Resolve & validate inputs
        id: inp
        shell: python
        env:
          DATASET_IN: ${{ github.event.inputs.dataset }}
          SOURCE_IN:  ${{ github.event.inputs.source }}
        run: |
          import os, re
          def safe_slug(s:str)->str:
              s = (s or "").strip().lower()
              s = s.replace("/", "_")
              s = re.sub(r"[^a-z0-9._-]+", "_", s)
              s = re.sub(r"_+", "_", s).strip("_")
              return s or "dataset"
          slug   = safe_slug(os.environ["DATASET_IN"])
          source = safe_slug(os.environ["SOURCE_IN"])
          slug_src = f"{slug}__{source}"
          print(f"::notice::Using dataset slug = {slug}")
          print(f"::notice::Using dataset+source id = {slug_src}")
          with open(os.environ["GITHUB_OUTPUT"], "a") as f:
              f.write(f"slug={slug}\n")
              f.write(f"slug_src={slug_src}\n")

      - name: Run FD probe
        env:
          PYTHONPATH: ${{ github.workspace }}
          # when we wire real APIs these are read by the connectors
          JHTDB_OFFLINE: ${{ secrets.JHTDB_OFFLINE }}
          JHTDB_TOKEN:   ${{ secrets.JHTDB_TOKEN }}
          NASA_CSV:      ${{ github.event.inputs.dataset }}   # allow path/URL via the dataset box for NASA
        run: |
          mkdir -p results/fd_probe
          python tools/fd_connectors/run_fd_probe.py \
            --source   "${{ github.event.inputs.source }}" \
            --dataset  "${{ steps.inp.outputs.slug }}" \
            --var      "${{ github.event.inputs.var }}" \
            --xyz      "${{ github.event.inputs.xyz }}" \
            --twin     "${{ github.event.inputs.twin }}" \
            --json-out "results/fd_probe/${{ steps.inp.outputs.slug_src }}.metrics.json"

      - name: Emit pulse YAML
        run: |
          python tools/agent_rhythm/make_pulse.py \
            --metrics "results/fd_probe/${{ steps.inp.outputs.slug_src }}.metrics.json" \
            --title   "${{ github.event.inputs.title }}" \
            --dataset "${{ steps.inp.outputs.slug_src }}" \
            --tags    "${{ github.event.inputs.tags }}" \
            --outdir  pulse/auto

      - name: Rebuild maps
        run: |
          python generate_graph_data.py \
            --pulse-glob "pulse/**/*.yml" \
            --alias-map meta/aliases.yml \
            --tag-descriptions meta/tag_descriptions.yml \
            --out-js docs/data.js

      - name: Commit & push
        run: |
          git config user.name "phi-mesh-bot"
          git config user.email "actions@users.noreply.github.com"
          git add -A
          git commit -m "auto: FD probe (${{ steps.inp.outputs.slug_src }}) pulse + updated maps" || echo "nothing to commit"
          git push || true
