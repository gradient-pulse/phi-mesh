name: Build Tags & Graph

on:
  push:
    paths:
      - "pulse/**/*.yml"
      - "meta/*.yml"
      - "update_tag_index.py"
      - "generate_graph_data.py"
      - "build_tag_browser.py"
      - "generate_tag_map.py"
      - "tools/**/*.py"
      - ".github/workflows/build_tags_and_graph.yml"
  workflow_dispatch:

# prevent overlapping runs on rapid pushes
concurrency:
  group: build-tags-and-graph
  cancel-in-progress: true

env:
  PYTHON_VERSION: "3.10"
  ALIASES_STRATEGY: "fail"   # set to "default" to auto-create a minimal meta/aliases.yml

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pyyaml networkx jinja2 matplotlib

      - name: Ensure aliases file (fail-fast or default)
        shell: bash
        run: |
          if [[ "${ALIASES_STRATEGY}" == "default" ]]; then
            if [[ ! -f meta/aliases.yml ]]; then
              echo "aliases: {}" > meta/aliases.yml
              echo "Created default meta/aliases.yml"
            fi
          else
            if [[ ! -f meta/aliases.yml ]]; then
              echo "::error::meta/aliases.yml missing. Set env ALIASES_STRATEGY=default to auto-create an empty one." >&2
              exit 1
            fi
          fi

      - name: Regenerate tag index
        run: |
          if [[ -f update_tag_index.py ]]; then
            python update_tag_index.py
          else
            echo "::warning::update_tag_index.py not found; skipping."
          fi

      - name: Generate alias-aware graph_data.js
        run: |
          if [[ -f generate_graph_data.py ]]; then
            python generate_graph_data.py \
              --tag-index meta/tag_index.yml \
              --alias-file meta/aliases.yml \
              --out docs/graph_data.js
          else
            echo "::error::generate_graph_data.py not found." >&2
            exit 1
          fi

      - name: Build tag map HTML (optional)
        run: |
          if [[ -f generate_tag_map.py ]]; then
            python generate_tag_map.py
          else
            echo "::notice::generate_tag_map.py not found; skipping."
          fi

      - name: Build tag browser HTML (optional)
        run: |
          if [[ -f build_tag_browser.py ]]; then
            python build_tag_browser.py
          else
            echo "::notice::build_tag_browser.py not found; skipping."
          fi

      - name: Suggest aliases (optional)
        run: |
          if [[ -f tools/suggest_aliases.py ]]; then
            python tools/suggest_aliases.py \
              --tag-index meta/tag_index.yml \
              --out meta/aliases_suggestions.yml || true
          else
            echo "::notice::tools/suggest_aliases.py not found; skipping suggestions."
          fi

      - name: Commit artifacts
        run: |
          git config user.name  "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"

          # Add only the canonical build outputs (no version sprawl)
          git add meta/tag_index.yml || true
          git add docs/graph_data.js || true
          git add docs/tag_map.html  || true
          git add docs/data.js       || true
          git add docs/tag_browser.html || true
          git add meta/aliases_suggestions.yml || true

          git commit -m "auto: update tag index, graph_data.js, and docs" || echo "Nothing to commit"
          git push || echo "Nothing to push"

      - name: Summary
        if: always()
        run: |
          NODES=$(grep -c '"id":' docs/graph_data.js 2>/dev/null || echo 0)
          echo "Nodes counted in graph_data.js (approx): ${NODES}"
