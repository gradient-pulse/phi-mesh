name: Build Tags & Graph

on:
  push:
    paths:
      - "meta/tag_index.yml"
      - "meta/aliases.yml"
      - "pulse/**/*.yml"
      - "generate_graph_data.py"
      - "build_tag_browser.py"
      - "docs/tag_map_template.html"
      - "docs/graph.js"
      - "tools/ensure_experimenter_refs.py"
      - ".github/workflows/build_tags_and_graph.yml"
  workflow_dispatch: {}

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install pyyaml networkx

      # --- Auto-fix canonical ExperimenterPulse refs (safe/no-op if none) ---
      - name: Ensure ExperimenterPulse references (auto-fix)
        shell: bash
        run: |
          set -euo pipefail
          if [[ -f tools/ensure_experimenter_refs.py ]]; then
            python tools/ensure_experimenter_refs.py
            git config user.name "github-actions[bot]"
            git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
            git add pulse/**/*.yml || true
            git commit -m "chore: ensure canonical ExperimenterPulse refs" || echo "nothing to commit"
            git push || true
          else
            echo "tools/ensure_experimenter_refs.py not found — skipping auto-fix."
          fi

      # --- Graph data --------------------------------------------------------
      - name: Generate alias-aware docs/data.js (recursive pulse scan)
        shell: bash
        run: |
          set -euo pipefail
          mkdir -p docs
          if [[ -f generate_graph_data.py ]]; then
            # generate_graph_data.py already ignores --alias-map if unsupported
            python generate_graph_data.py \
              --tag-index meta/tag_index.yml \
              --alias-map meta/aliases.yml \
              --pulse-glob "pulse/**/*.yml" \
              --out-js docs/data.js
          else
            echo "generate_graph_data.py is missing"; exit 1
          fi

      # --- Tag browser -------------------------------------------------------
      - name: Build Tag Browser HTML (docs/tag_browser.html)
        shell: bash
        run: |
          set -euo pipefail
          python build_tag_browser.py \
            --tag-index meta/tag_index.yml \
            --alias-map meta/aliases.yml \
            --data-js docs/data.js \
            --out-html docs/tag_browser.html

      # --- Validate output so we don't publish empties -----------------------
      - name: Validate docs/data.js
        shell: bash
        run: |
          set -euo pipefail
          if [[ ! -s docs/data.js ]]; then
            echo "ERROR: docs/data.js is empty or missing."; exit 2
          fi
          if ! head -n 1 docs/data.js | grep -q "window.PHI_DATA"; then
            echo "ERROR: docs/data.js missing window.PHI_DATA"; exit 3
          fi
          echo "OK: docs/data.js looks good."

      # --- Warn-only verification (non-blocking) -----------------------------
      - name: Verify canonical refs present in ExperimenterPulse files (warn-only)
        shell: bash
        run: |
          set +e
          M=0
          mapfile -t files < <(grep -rl 'ExperimenterPulse' pulse | grep -E '\.ya?ml$')
          if [[ "${#files[@]}" -eq 0 ]]; then
            echo "No ExperimenterPulse pulses found — nothing to verify."
          else
            for f in "${files[@]}"; do
              grep -q 'doi\.org/10\.5281/zenodo\.15830659' "$f" || { echo "WARN: Missing WIT TAKES DOI in $f"; ((M+=1)); }
              grep -q 'doi\.org/10\.5281/zenodo\.16812467' "$f" || { echo "WARN: Missing GUIDE DOI in $f"; ((M+=1)); }
              grep -q 'notebooklm\.google\.com/notebook/d49018d3' "$f"     || { echo "WARN: Missing Podcast 1 in $f"; ((M+=1)); }
              grep -q 'notebooklm\.google\.com/notebook/b7e25629' "$f"     || { echo "WARN: Missing Podcast 2 in $f"; ((M+=1)); }
            done
          fi
          echo "Verification complete (warn-only). Missing-count: $M"
          exit 0

      # --- Commit generated artifacts ----------------------------------------
      - name: Commit generated artifacts
        shell: bash
        run: |
          set -euo pipefail
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add docs/data.js docs/tag_browser.html
          git commit -m "Auto: build tags & graph (data.js, tag_browser.html)" || echo "No changes to commit"
          git push || echo "Nothing to push"
