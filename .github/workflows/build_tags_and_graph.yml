name: Build Tags & Graph

on:
  push:
    paths:
      - "meta/tag_index.yml"
      - "meta/aliases.yml"
      - "pulse/**/*.yml"
      - "generate_graph_data.py"
      - "build_tag_browser.py"
      - "docs/tag_map_template.html"
      - "docs/graph.js"
      - "tools/ensure_experimenter_refs.py"
      - ".github/workflows/build_tags_and_graph.yml"
  workflow_dispatch: {}

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install pyyaml networkx

      # --- Auto-add default tags to ExperimenterPulse ---
      - name: Ensure default tags present
        run: |
          set -euo pipefail
          for f in $(grep -rl 'ExperimenterPulse' pulse | grep -E '\.ya?ml$'); do
            for tag in "RGP" "NT (Narrative_Tick)" "Rhythm" "NavierStokes" "turbulence" "ExperimenterPulse"; do
              grep -q "^- ${tag}$" "$f" || echo "  - ${tag}" >> "$f"
            done
          done
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add pulse/**/*.yml || true
          git commit -m "chore: add default tags to ExperimenterPulse" || echo "nothing to commit"
          git push || true

      # --- Auto-add default tags to auto pulses only -------------------------
      - name: Ensure default tags in auto pulses
        shell: bash
        run: |
          set -euo pipefail
          if [[ -f tools/add_default_tags.py ]]; then
            python tools/add_default_tags.py
            git config user.name "github-actions[bot]"
            git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
            git add pulse/auto/**/*.yml || true
            git commit -m "chore: add default tags to auto pulses" || echo "nothing to commit"
            git push || true
          else
            echo "tools/add_default_tags.py not found — skipping."
          fi

      # --- Repair auto pulses (trim tails, normalize tags) ---
      - name: Repair auto pulses (trim tails, normalize tags)
        shell: bash
        run: |
          set -euo pipefail
          if [[ -f tools/repair_auto_pulses.py ]]; then
            python tools/repair_auto_pulses.py
            git config user.name "github-actions[bot]"
            git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
            git add pulse/auto/**/*.yml || true
            git commit -m "chore: repair auto pulses (trim tails, normalize tags)" || echo "nothing to commit"
            git push || true
          else
            echo "tools/repair_auto_pulses.py not found — skipping."
          fi

      # --- Auto-fix canonical ExperimenterPulse refs ---
      - name: Ensure ExperimenterPulse references (auto-fix)
        run: |
          set -euo pipefail
          if [[ -f tools/ensure_experimenter_refs.py ]]; then
            python tools/ensure_experimenter_refs.py
            git add pulse/**/*.yml || true
            git commit -m "chore: ensure canonical ExperimenterPulse refs" || echo "nothing to commit"
            git push || true
          else
            echo "tools/ensure_experimenter_refs.py not found — skipping auto-fix."
          fi

      # --- Rebuild tag_index.yml from pulses (alias-aware) ---------------------
      - name: Rebuild tag_index.yml
        shell: bash
        run: |
          set -euo pipefail
          python tools/rebuild_tag_index.py
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add meta/tag_index.yml
          git commit -m "Auto: rebuild meta/tag_index.yml (alias-aware)" || echo "No tag_index changes"
          git push || echo "Nothing to push"

      # --- Graph data ---
      - name: Generate alias-aware docs/data.js (recursive pulse scan)
        run: |
          mkdir -p docs
          python generate_graph_data.py \
            --tag-index meta/tag_index.yml \
            --alias-map meta/aliases.yml \
            --pulse-glob "pulse/**/*.yml" \
            --out-js docs/data.js

      # --- Tag browser ---
      - name: Build Tag Browser HTML
        run: |
          python build_tag_browser.py \
            --tag-index meta/tag_index.yml \
            --alias-map meta/aliases.yml \
            --data-js docs/data.js \
            --out-html docs/tag_browser.html

      # --- Validate output ---
      - name: Validate docs/data.js
        run: |
          if [[ ! -s docs/data.js ]]; then
            echo "ERROR: docs/data.js is empty or missing."; exit 2
          fi
          if ! head -n 1 docs/data.js | grep -q "window.PHI_DATA"; then
            echo "ERROR: docs/data.js missing window.PHI_DATA"; exit 3
          fi
          echo "OK: docs/data.js looks good."

      # --- YAML validation (skip archive & telemetry) ---
      - name: Validate YAML syntax
        run: |
          set -euo pipefail
          shopt -s globstar nullglob
          for file in pulse/**/*.yml pulse/**/*.yaml; do
            if [[ "$file" == pulse/archive/* || "$file" == pulse/telemetry/* ]]; then
              echo "Skipping $file"
              continue
            fi
            echo "Checking $file"
            python -c "import sys, yaml; yaml.safe_load(open('$file'))" || { echo "YAML ERROR in $file"; exit 1; }
          done

      # --- Warn-only verification ---
      - name: Verify canonical refs present (warn-only)
        run: |
          set +e
          M=0
          mapfile -t files < <(grep -rl 'ExperimenterPulse' pulse | grep -E '\.ya?ml$')
          if [[ "${#files[@]}" -eq 0 ]]; then
            echo "No ExperimenterPulse pulses found — nothing to verify."
          else
            for f in "${files[@]}"; do
              grep -q 'doi\.org/10\.5281/zenodo\.15830659' "$f" || { echo "WARN: Missing WIT TAKES DOI in $f"; ((M+=1)); }
              grep -q 'doi\.org/10\.5281/zenodo\.16812467' "$f" || { echo "WARN: Missing GUIDE DOI in $f"; ((M+=1)); }
              grep -q 'notebooklm\.google\.com/notebook/d49018d3' "$f"     || { echo "WARN: Missing Podcast 1 in $f"; ((M+=1)); }
              grep -q 'notebooklm\.google\.com/notebook/b7e25629' "$f"     || { echo "WARN: Missing Podcast 2 in $f"; ((M+=1)); }
            done
          fi
          echo "Verification complete (warn-only). Missing-count: $M"
          exit 0

      # --- Commit generated artifacts ---
      - name: Commit generated artifacts
        run: |
          git add docs/data.js docs/tag_browser.html
          git commit -m "Auto: build tags & graph (data.js, tag_browser.html)" || echo "No changes to commit"
          git push || echo "Nothing to push"
