name: Clean Pulses (minimal schema)

on:
  workflow_dispatch:
  push:
    branches: [ main ]
    paths:
      - 'pulse/**/*.yml'
      - 'pulse/**/*.yaml'
      - 'tools/clean_pulses_minimal.py'

permissions:
  contents: write

concurrency:
  group: clean-pulses
  cancel-in-progress: false

jobs:
  clean:
    # avoid infinite loops when the workflow itself commits
    if: github.actor != 'github-actions[bot]'
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Verify cleaner exists
        shell: bash
        run: |
          if [[ ! -f tools/clean_pulses_minimal.py ]]; then
            echo "tools/clean_pulses_minimal.py not found â€” nothing to do."
            exit 0
          fi

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pyyaml

      - name: Dry-run (detect changes)
        run: |
          python tools/clean_pulses_minimal.py --check || echo "Changes needed"

      - name: Apply fixes
        run: |
          python tools/clean_pulses_minimal.py --write

      - name: Commit changes (if any)
        shell: bash
        run: |
          set -e
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"

          # Stage any pulse updates (yml/yaml) under pulse/
          git add -A pulse/

          echo "---- files staged ----"
          git status --porcelain | sed -n '1,200p' || true

          # If nothing staged, stop quietly
          if git diff --cached --quiet; then
            echo "No changes to commit"
            exit 0
          fi

          git commit -m "chore: clean pulses to minimal schema (title,date,summary,tags,papers,podcasts)"
          # In case someone raced a push to main, rebase then push
          git pull --rebase || true
          git push || true
