name: GOLD PATH â€” Loader (Hopkins / Princeton / Demo)

on:
  workflow_dispatch:
    inputs:
      source:
        description: "Data source: jhtdb | princeton | demo"
        required: true
        default: "jhtdb"
      params:
        description: >-
          JSON parameters.
          JHTDB: {"flow","x","y","z","t0","dt","nsteps","slug"}
          Princeton: {"subset_path","slug"}
          Demo: {"slug"}
        required: false
        default: '{"flow":"isotropic1024coarse","x":0.1,"y":0.2,"z":0.3,"t0":0.0,"dt":0.0005,"nsteps":2400,"slug":"isotropic"}'

permissions:
  contents: write

jobs:
  run:
    runs-on: ubuntu-latest
    env:
      PYTHONPATH: ${{ github.workspace }}
      JHTDB_TOKEN: ${{ secrets.JHTDB_TOKEN }}
      MPLBACKEND: Agg   # force headless matplotlib

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies (SOAP + HDF5 + helpers)
        run: |
          python -m pip install --upgrade pip
          pip install numpy pandas pyyaml pyarrow suds-community lxml matplotlib

      - name: Parse params
        id: parse
        run: |
          echo "params<<EOF" >> $GITHUB_OUTPUT
          echo '${{ github.event.inputs.params }}' >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Show plan
        run: |
          echo "SOURCE: ${{ github.event.inputs.source }}"
          echo "PARAMS: ${{ steps.parse.outputs.params }}"

      - name: Run JHTDB pipeline
        if: ${{ github.event.inputs.source == 'jhtdb' }}
        shell: python
        run: |
          import json,subprocess,shlex
          r=json.loads('${{ steps.parse.outputs.params }}')
          cmd=f"python tools/fd_connectors/jhtdb/jhtdb_loader.py --flow {r['flow']} --x {r['x']} --y {r['y']} --z {r['z']} --t0 {r['t0']} --dt {r['dt']} --nsteps {r['nsteps']} --slug {r['slug']}"
          print(cmd)
          subprocess.check_call(shlex.split(cmd))
          stem=f"{r['flow']}__x{r['x']}_y{r['y']}_z{r['z']}__t{r['t0']}_dt{r['dt']}_n{r['nsteps']}"
          meta=f"data/jhtdb/{stem}.meta.json"
          out=f"results/fd_probe/{stem}.analysis.json"
          subprocess.check_call(["python","tools/fd_connectors/jhtdb/analyze_probe.py","--meta",meta,"--out",out])
          subprocess.check_call([
            "python","tools/fd_connectors/jhtdb/make_pulse_from_probe.py",
            "--flow",r['flow'],
            "--x",str(r['x']),"--y",str(r['y']),"--z",str(r['z']),
            "--t0",str(r['t0']),"--dt",str(r['dt']),"--nsteps",str(r['nsteps']),
            "--slug",r['slug']
          ])

      - name: Run Princeton pipeline
        if: ${{ github.event.inputs.source == 'princeton' }}
        shell: python
        run: |
          import json,subprocess
          r=json.loads('${{ steps.parse.outputs.params }}')
          subset=r["subset_path"]
          slug=r.get("slug","princeton_subset")
          subprocess.check_call(["python","analysis/princeton_probe/run_pipeline.py","--subset",subset,"--slug",slug])

      - name: Run Demo pipeline (synthetic Princeton)
        if: ${{ github.event.inputs.source == 'demo' }}
        shell: python
        run: |
          import numpy as np, pandas as pd, pathlib, subprocess
          out = pathlib.Path("data/princeton"); out.mkdir(parents=True, exist_ok=True)
          t = np.linspace(0, 10, 256)
          df = pd.DataFrame({
              "t": t,
              "u": np.sin(2*np.pi*0.8*t),
              "v": np.sin(2*np.pi*1.6*t),
              "w": np.sin(2*np.pi*2.4*t),
              "Z": 0.0
          })
          subset = out/"demo_subset.csv"
          df.to_csv(subset, index=False)
          print(f"wrote {subset}")
          subprocess.check_call([
            "python","analysis/princeton_probe/run_pipeline.py",
            "--subset", str(subset),
            "--slug", "demo"
          ])

      - name: Commit outputs
        if: always()
        run: |
          git config user.name  "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add -A data/jhtdb        2>/dev/null || true
          git add -A data/princeton    2>/dev/null || true
          git add -A results/fd_probe  2>/dev/null || true
          git add -A results/princeton 2>/dev/null || true
          git add -A pulse/auto        2>/dev/null || true
          git commit -m "gold-path: results + pulses" || echo "No changes"
          git pull --rebase origin main || true
          git push || true
