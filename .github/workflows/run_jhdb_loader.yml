name: Run JHTDB Loader

on:
  workflow_dispatch:
    inputs:
      flow:       { description: "Flow dataset name (e.g. isotropic1024coarse)", required: false, default: "isotropic1024coarse" }
      x:          { description: "Probe X coordinate", required: false, default: "0.1" }
      y:          { description: "Probe Y coordinate", required: false, default: "0.2" }
      z:          { description: "Probe Z coordinate", required: false, default: "0.3" }
      t0:         { description: "Start time", required: false, default: "0.0" }
      dt:         { description: "Time step", required: false, default: "0.0005" }
      nsteps:     { description: "Number of steps", required: false, default: "2400" }
      slug:       { description: "Slug for filenames", required: false, default: "isotropic" }
      batch_file: { description: "Optional tools/fd_connectors/jhtdb/batch.yml (overrides inputs)", required: false, default: "" }

permissions:
  contents: write

concurrency:
  group: jhtdb-run
  cancel-in-progress: true

jobs:
  plan:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set_matrix.outputs.matrix }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - id: set_matrix
        shell: bash
        run: |
          set -euo pipefail
          BF="${{ github.event.inputs.batch_file }}"
          if [[ -n "$BF" && -f "$BF" ]]; then
            python -c "import json,yaml,io,os; d=yaml.safe_load(io.open('$BF','r',encoding='utf-8')) or {}; runs=list(d.get('runs',[])); print(json.dumps({'include':runs},separators=(',',':')))" > matrix.json
          else
            python -c "import json; print(json.dumps({'include':[{'flow':'${{ github.event.inputs.flow }}','x':float('${{ github.event.inputs.x }}'),'y':float('${{ github.event.inputs.y }}'),'z':float('${{ github.event.inputs.z }}'),'t0':float('${{ github.event.inputs.t0 }}'),'dt':float('${{ github.event.inputs.dt }}'),'nsteps':int('${{ github.event.inputs.nsteps }}'),'slug':'${{ github.event.inputs.slug }}'}]},separators=(',',':')))" > matrix.json
          fi
          echo 'Planned matrix:'; cat matrix.json
          echo "matrix=$(cat matrix.json)" >> "$GITHUB_OUTPUT"

  run:
    needs: plan
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.plan.outputs.matrix) }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies (SOAP + helpers)
        run: |
          python -m pip install --upgrade pip
          pip install "numpy==1.23.5" "pandas==2.2.2" "pyyaml>=6.0" "suds-community>=1.1.2" "pyarrow>=14"

      - name: Run JHTDB loader
        run: |
          python tools/fd_connectors/jhtdb/jhtdb_loader.py \
            --flow   "${{ matrix.flow }}" \
            --x      "${{ matrix.x }}" \
            --y      "${{ matrix.y }}" \
            --z      "${{ matrix.z }}" \
            --t0     "${{ matrix.t0 }}" \
            --dt     "${{ matrix.dt }}" \
            --nsteps "${{ matrix.nsteps }}"

      - name: Analyze probe
        run: |
          pattern=$(printf 'data/jhtdb/%s__x%s_y%s_z%s__t*_dt%s_n%s.meta.json' \
            "${{ matrix.flow }}" "${{ matrix.x }}" "${{ matrix.y }}" "${{ matrix.z }}" \
            "${{ matrix.dt }}" "${{ matrix.nsteps }}")
          meta_file=$(ls $pattern 2>/dev/null | head -n1 || true)
          if [[ -z "$meta_file" ]]; then
            echo "ERROR: meta file not found with pattern: $pattern"
            exit 1
          fi
          out_file=$(printf 'results/fd_probe/%s__x%s_y%s_z%s__t%s_dt%s_n%s.analysis.json' \
            "${{ matrix.flow }}" "${{ matrix.x }}" "${{ matrix.y }}" "${{ matrix.z }}" \
            "${{ matrix.t0 }}" "${{ matrix.dt }}" "${{ matrix.nsteps }}")
          python tools/fd_connectors/jhtdb/analyze_probe.py --meta "$meta_file" --out "$out_file"

      - name: Generate pulse
        run: |
          python tools/fd_connectors/jhtdb/make_pulse_from_probe.py \
            --flow   "${{ matrix.flow }}" \
            --x      "${{ matrix.x }}" \
            --y      "${{ matrix.y }}" \
            --z      "${{ matrix.z }}" \
            --t0     "${{ matrix.t0 }}" \
            --dt     "${{ matrix.dt }}" \
            --nsteps "${{ matrix.nsteps }}" \
            --slug   "${{ matrix.slug }}"

      - name: Commit outputs
        run: |
          git config user.name  "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add -A data/jhtdb results/fd_probe pulse/auto
          if git diff --cached --quiet; then
            echo "No new files to commit."
            exit 0
          fi
          git commit -m "data(jhtdb): probe evidence + analysis + pulse(s)"
          git pull --rebase origin main || true
          git push
