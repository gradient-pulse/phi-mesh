name: Run JHTDB Loader

on:
  workflow_dispatch:
    inputs:
      batch_file:
        description: "Optional YAML of runs (latest first). If set, matrix overrides single inputs."
        required: false
        default: ""
      flow:
        description: "Dataset"
        required: true
        default: "isotropic1024coarse"
      x:      { description: "Probe x", required: true,  default: "0.1" }
      y:      { description: "Probe y", required: true,  default: "0.2" }
      z:      { description: "Probe z", required: true,  default: "0.3" }
      t0:     { description: "Start time", required: true, default: "0.0" }
      dt:     { description: "Δt", required: true, default: "0.002" }
      nsteps: { description: "Samples", required: true, default: "1000" }
      slug:
        description: "Optional pulse slug (e.g., fdprobe, nt_rhythm)"
        required: false
        default: ""

permissions:
  contents: write

concurrency:
  group: jhtdb-run
  cancel-in-progress: true

jobs:
  plan:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set_matrix.outputs.matrix }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - id: set_matrix
        shell: bash
        run: |
          set -euo pipefail

          if [[ -n "${{ github.event.inputs.batch_file }}" && -f "${{ github.event.inputs.batch_file }}" ]]; then
            echo "Using batch file: ${{ github.event.inputs.batch_file }}"
            python - <<'PY' > matrix.json
import json, yaml, sys
p = "${{ github.event.inputs.batch_file }}"
d = yaml.safe_load(open(p)) or {}
runs = list(reversed(d.get("runs", [])))  # newest first
print(json.dumps({"include": runs}))
PY
            echo "matrix=$(cat matrix.json)" >> "$GITHUB_OUTPUT"
          else
            echo "Single run parameters"
            cat > matrix.json <<JSON
{"include":[{"flow":"${{ github.event.inputs.flow }}",
             "x":${{ github.event.inputs.x }},
             "y":${{ github.event.inputs.y }},
             "z":${{ github.event.inputs.z }},
             "t0":${{ github.event.inputs.t0 }},
             "dt":${{ github.event.inputs.dt }},
             "nsteps":${{ github.event.inputs.nsteps }},
             "slug":"${{ github.event.inputs.slug }}" }]}
JSON
            echo "matrix=$(cat matrix.json)" >> "$GITHUB_OUTPUT"
          fi

  run:
    needs: plan
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.plan.outputs.matrix) }}

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install deps
        run: |
          set -euo pipefail
          python -m pip install --upgrade pip
          pip install suds-community pandas pyarrow pyyaml numpy==1.23.5 scipy<1.11 matplotlib<3.8 h5py<4 cython<3

      - name: Run JHTDB loader
        env:
          JHTDB_EMAIL: ${{ secrets.JHTDB_EMAIL }}
        run: |
          set -euo pipefail
          python tools/fd_connectors/jhtdb/jhtdb_loader.py \
            --flow "${{ matrix.flow }}" \
            --x "${{ matrix.x }}" --y "${{ matrix.y }}" --z "${{ matrix.z }}" \
            --t0 "${{ matrix.t0 }}" --dt "${{ matrix.dt }}" --nsteps "${{ matrix.nsteps }}"

      - name: Analyze probe(s) → metrics + strict pulses
        shell: bash
        run: |
          set -euo pipefail
          today=$(date +%F)
          # batch number: 1-based, per strategy job index
          batch_n=$(( ${{ strategy.job-index }} + 1 ))

          # slug resolution: matrix.slug > workflow input slug > fdprobe
          slug="${{ matrix.slug }}"
          if [ -z "$slug" ]; then slug="${{ github.event.inputs.slug }}"; fi
          slug="${slug:-fdprobe}"

          shopt -s nullglob
          for meta in data/jhtdb/*.meta.json; do
            base=$(basename "$meta" .meta.json)
            ana="results/fd_probe/${base}.analysis.json"

            python tools/fd_connectors/jhtdb/analyze_probe.py \
              --meta "$meta" --out "$ana"

            python tools/fd_connectors/jhtdb/make_pulse_from_probe.py \
              --meta "$meta" --analysis "$ana" \
              --outdir pulse --date "$today" --batch "$batch_n" --slug "$slug"
          done

      - name: Upload artifacts (evidence)
        uses: actions/upload-artifact@v4
        with:
          name: jhtdb-${{ matrix.flow }}-${{ matrix.x }}-${{ matrix.y }}-${{ matrix.z }}
          path: |
            data/jhtdb/*.csv.gz
            data/jhtdb/*.parquet
            data/jhtdb/*.meta.json
            results/fd_probe/*.analysis.json
            pulse/*.yml
            docs/data.js

      - name: Commit outputs
        shell: bash
        run: |
          set -euo pipefail
          git config user.name  "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add \
            data/jhtdb/*.csv.gz data/jhtdb/*.meta.json results/fd_probe/*.analysis.json \
            pulse/*.yml docs/data.js 2>/dev/null || true
          if git diff --cached --quiet; then
            echo "No new files to commit."
            exit 0
          fi
          git commit -m "data(jhtdb): probe evidence + analysis + pulses + map refresh (${{ matrix.flow }})"
          git pull --rebase origin main || true
          git push
