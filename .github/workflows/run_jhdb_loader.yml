name: Run JHTDB Loader

on:
  workflow_dispatch:
    inputs:
      flow:       { description: "Flow dataset name (e.g. isotropic1024coarse)", required: false, default: "isotropic1024coarse" }
      x:          { description: "Probe X coordinate", required: false, default: "0.1" }
      y:          { description: "Probe Y coordinate", required: false, default: "0.2" }
      z:          { description: "Probe Z coordinate", required: false, default: "0.3" }
      t0:         { description: "Start time", required: false, default: "0.0" }
      dt:         { description: "Time step", required: false, default: "0.0005" }
      nsteps:     { description: "Number of steps", required: false, default: "2400" }
      slug:       { description: "Slug for filenames", required: false, default: "isotropic" }
      batch_file: { description: "Optional tools/fd_connectors/jhtdb/batch.yml", required: false, default: "" }

permissions:
  contents: write

concurrency:
  group: jhtdb-run
  cancel-in-progress: true

jobs:
  plan:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set_matrix.outputs.matrix }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - id: set_matrix
        shell: bash
        run: |
          set -euo pipefail
          BF="${{ github.event.inputs.batch_file }}"

          if [[ -n "$BF" && -f "$BF" ]]; then
            echo "Using batch file: $BF"
            python -m pip install -q --user pyyaml
            python -c "import os,json,yaml,io; p=os.environ.get('BF'); d=yaml.safe_load(io.open(p,'r',encoding='utf-8')) or {}; runs=list(d.get('runs',[])); print(json.dumps({'include':runs},separators=(',',':')))" > matrix.json
          else
            echo 'Single run parameters'
            python -c "import json; print(json.dumps({'include':[{'flow':'${{ github.event.inputs.flow }}','x':${{ github.event.inputs.x }},'y':${{ github.event.inputs.y }},'z':${{ github.event.inputs.z }},'t0':${{ github.event.inputs.t0 }},'dt':${{ github.event.inputs.dt }},'nsteps':${{ github.event.inputs.nsteps }},'slug':'${{ github.event.inputs.slug }}'}]},separators=(',',':')))" > matrix.json
          fi

          echo 'Planned matrix:'
          cat matrix.json
          echo "matrix=$(cat matrix.json)" >> "$GITHUB_OUTPUT"

  run:
    needs: plan
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.plan.outputs.matrix) }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies (SOAP + helpers)
        run: |
          python -m pip install --upgrade pip
          pip install pandas numpy suds-community

      - name: Run JHTDB loader (fetch CSV cache)
        run: |
          python tools/fd_connectors/jhtdb/jhtdb_loader.py \
            --flow ${{ matrix.flow }} \
            --x ${{ matrix.x }} \
            --y ${{ matrix.y }} \
            --z ${{ matrix.z }} \
            --t0 ${{ matrix.t0 }} \
            --dt ${{ matrix.dt }} \
            --nsteps ${{ matrix.nsteps }}

      - name: Analyze probe (auto-find meta)
        run: |
          meta_file=$(ls data/jhtdb/${{ matrix.flow }}__x${{ matrix.x }}_y${{ matrix.y }}_z${{ matrix.z }}__t0${{ matrix.t0 }}_dt${{ matrix.dt }}_n${{ matrix.nsteps }}.meta.json)
          out_file=results/fd_probe/${{ matrix.flow }}__x${{ matrix.x }}_y${{ matrix.y }}_z${{ matrix.z }}__t0${{ matrix.t0 }}_dt${{ matrix.dt }}_n${{ matrix.nsteps }}.analysis.json
          python tools/fd_connectors/jhtdb/analyze_probe.py --meta "$meta_file" --out "$out_file"

      - name: Generate pulse
        run: |
          python tools/fd_connectors/jhtdb/make_pulse_from_probe.py \
            --meta "$meta_file" \
            --analysis "$out_file" \
            --out pulse/auto/${{ github.run_id }}_${{ matrix.slug }}.yml

      - name: Commit outputs
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "actions@github.com"
          git add results/ pulse/auto/
          git commit -m "auto: FD probe run â†’ results + pulses"
          git push
