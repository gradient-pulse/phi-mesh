name: RGP-NS Agent Runner

on:
  workflow_dispatch: {}
  schedule:
    - cron: "17 3 * * 2"  # Tuesdays 03:17 UTC

permissions:
  contents: write

concurrency:
  group: rgp-ns-runner
  cancel-in-progress: false

jobs:
  run:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then
            pip install -r requirements.txt
          else
            pip install pyyaml jq
          fi

      - name: Check secrets (warn only)
        env:
          JHTDB_TOKEN: ${{ secrets.JHTDB_TOKEN }}
          ZENODO_DOI:  ${{ secrets.ZENODO_DOI }}
          X_WEBHOOK_URL: ${{ secrets.X_WEBHOOK_URL }}
        run: |
          if [ -z "${JHTDB_TOKEN}" ]; then echo "⚠️  Warning: JHTDB_TOKEN not set"; else echo "✅ JHTDB_TOKEN present"; fi
          if [ -z "${ZENODO_DOI}" ]; then echo "⚠️  Warning: ZENODO_DOI not set"; else echo "✅ ZENODO_DOI present"; fi
          if [ -z "${X_WEBHOOK_URL}" ]; then echo "⚠️  Warning: X_WEBHOOK_URL not set"; else echo "✅ X_WEBHOOK_URL present"; fi
          echo "Continuing (warnings only)."

      - name: Execute agent loop
        env:
          JHTDB_TOKEN: ${{ secrets.JHTDB_TOKEN }}
          ZENODO_DOI:  ${{ secrets.ZENODO_DOI }}
          X_WEBHOOK_URL: ${{ secrets.X_WEBHOOK_URL }}
        run: |
          if [ -f agents/rgp_ns/run_agent.py ]; then
            python agents/rgp_ns/run_agent.py
          else
            echo "No agents/rgp_ns/run_agent.py found — skipping agent run."
          fi

      - name: Debug — show new files
        run: |
          echo "Tree after agent run:"
          ls -la
          echo "--- pulse ---";           ls -la pulse || true
          echo "--- pulse/auto ---";      ls -la pulse/auto || true
          echo "--- results ---";         ls -la results || true
          echo "--- results/rgp_ns ---";  ls -la results/rgp_ns || true

      - name: Verify outputs (latest run only)
        run: |
          set -euo pipefail
          if [ ! -d results/rgp_ns ]; then
            echo "No results/rgp_ns directory found (nothing to verify)."
            exit 0
          fi
          latest_root="$(find results/rgp_ns -mindepth 1 -maxdepth 1 -type d -printf '%T@ %p\n' | sort -nr | head -n1 | awk '{print $2}')"
          if [ -z "${latest_root:-}" ]; then
            echo "No run directory found under results/rgp_ns"
            exit 0
          fi
          found=0
          while IFS= read -r -d '' s; do
            found=1
            echo "Checking $s"
            jq -e '
              .dataset and .variant and .nt_test and
              (.nt_test.p != null) and
              (.nt_test.effect_size != null) and
              (.nt_test.significant != null)
            ' "$s" >/dev/null
          done < <(find "$latest_root" -type f -name summary.json -print0)
          if [ "$found" -eq 0 ]; then
            echo "No summary.json files found inside latest run ($latest_root)"
          else
            echo "OK: latest run summaries look good."
          fi

      - name: Auto-create pulse if significant
        run: |
          set -e
          if [ ! -d results/rgp_ns ]; then
            echo "No results to scan for pulses."
            exit 0
          fi

          latest_root="$(find results/rgp_ns -mindepth 1 -maxdepth 1 -type d -printf '%T@ %p\n' | sort -nr | head -n1 | awk '{print $2}')"
          if [ -z "${latest_root:-}" ]; then
            echo "No latest run root; skipping pulse creation."
            exit 0
          fi

          latest_dir="$(find "$latest_root" -mindepth 1 -maxdepth 1 -type d -printf '%T@ %p\n' | sort -nr | head -n1 | awk '{print $2}')"
          target="${latest_dir:-$latest_root}"
          summary="$target/summary.json"

          if [ ! -f "$summary" ]; then
            echo "No summary.json in $target — skipping pulse creation."
            exit 0
          fi

          if [ "$(jq -r '.nt_test.significant' "$summary")" = "true" ]; then
            dataset=$(jq -r '.dataset' "$summary")
            effect=$(jq -r '.nt_test.effect_size' "$summary")
            pval=$(jq -r '.nt_test.p' "$summary")
            ts=$(date -u +"%Y%m%d_%H%M%S")

            mkdir -p pulse/auto
            pulse_file="pulse/auto/${ts}_${dataset}.yml"

            {
              printf 'title: "Significant NT Rhythm — %s"\n' "$dataset"
              printf 'date: "%s"\n' "$(date -u +%Y-%m-%d)"
              printf 'summary: >\n'
              printf '  Automated detection run found statistically significant NT rhythm in dataset "%s"\n' "$dataset"
              printf '  (effect size = %s, p = %s).\n' "$effect" "$pval"
              printf 'tags:\n'
              printf '  - RGP\n'
              printf '  - Navier_Stokes\n'
              printf '  - NT_rhythm\n'
              printf '  - rhythm-of-least-divergence\n'
              printf 'papers: []\n'
              printf 'podcasts: []\n'
            } > "$pulse_file"

            echo "Pulse created: $pulse_file"
          else
            echo "No significant result — skipping pulse creation."
          fi

      - name: Ensure ExperimenterPulse references (auto-fix)
        run: |
          if [ -f tools/ensure_experimenter_refs.py ]; then
            python tools/ensure_experimenter_refs.py || true
          else
            echo "tools/ensure_experimenter_refs.py not found — skipping."
          fi

      - name: Commit results & pulses
        run: |
          git config user.name "phi-mesh-bot"
          git config user.email "actions@users.noreply.github.com"
          git pull --rebase origin main || true
          git add -A
          git commit -m "auto: RGP-NS agent run (results + pulses)" || echo "nothing to commit"
          git push || true
