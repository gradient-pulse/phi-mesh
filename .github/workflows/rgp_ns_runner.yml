name: RGP-NS Agent Runner

on:
  workflow_dispatch: {}
  schedule:
    - cron: "17 3 * * 2"  # Tuesdays 03:17 UTC

permissions:
  contents: write

jobs:
  run:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Execute agent loop
        env:
          JHTDB_TOKEN: ${{ secrets.JHTDB_TOKEN }}
          ZENODO_DOI:  ${{ secrets.ZENODO_DOI }}
          X_WEBHOOK_URL: ${{ secrets.X_WEBHOOK_URL }}
        run: python agents/rgp_ns/run_agent.py

      - name: Debug — show new files
        run: |
          echo "Tree after agent run:"
          ls -la
          echo "--- pulse ---"
          ls -la pulse || true
          echo "--- pulse/auto ---"
          ls -la pulse/auto || true
          echo "--- results ---"
          ls -la results || true
          echo "--- results/rgp_ns ---"
          ls -la results/rgp_ns || true

      - name: Verify outputs (schema + presence)
        run: |
          set -euo pipefail
          echo "Checking pulse/auto/"
          test -d pulse/auto && ls -1 pulse/auto/*.yml | head -n 2
          echo "Checking results/rgp_ns/"
          test -d results/rgp_ns
          python - << 'PY'
import json, sys, pathlib
base = pathlib.Path("results/rgp_ns")
runs = list(base.glob("*/*/summary.json"))
assert runs, "No summary.json files found under results/rgp_ns/*/*"
bad = []
for s in runs:
    d = json.loads(s.read_text())
    for k in ("dataset","variant","nt_test"):
        if k not in d: bad.append((str(s), f"missing {k}"))
    t = d.get("nt_test",{})
    for k in ("p","effect_size","significant"):
        if k not in t: bad.append((str(s), f"nt_test missing {k}"))
if bad:
    for f,msg in bad: print("FAIL", f, "→", msg)
    sys.exit(1)
print(f"OK: {len(runs)} summaries look good.")
PY

      - name: Show latest summary in logs
        run: |
          ls -1dt results/rgp_ns/*/* | head -n1 | xargs -I {} bash -lc 'echo "::group::{}"; cat {}/summary.json; echo "::endgroup::"'

      - name: Auto-create pulse if significant
        run: |
          latest_dir=$(ls -1dt results/rgp_ns/*/* | head -n1)
          summary_file="$latest_dir/summary.json"
          if [ -f "$summary_file" ]; then
            sig=$(jq -r '.nt_test.significant' "$summary_file")
            if [ "$sig" = "true" ]; then
              dataset=$(jq -r '.dataset' "$summary_file")
              effect=$(jq -r '.nt_test.effect_size' "$summary_file")
              pval=$(jq -r '.nt_test.p' "$summary_file")
              ts=$(date -u +"%Y%m%d_%H%M%S")
              pulse_file="pulse/auto/${ts}_${dataset}.yml"
              mkdir -p pulse/auto
              cat > "$pulse_file" <<YML
title: "Significant NT Rhythm — ${dataset}"
date: "$(date -u +"%Y-%m-%d")"
summary: >
  Automated detection run found statistically significant NT rhythm
  in dataset \`${dataset}\` (effect size = ${effect}, p = ${pval}).
tags:
  - RGP
  - Navier_Stokes
  - NT_rhythm
  - rhythm-of-least-divergence
papers: []
podcasts: []
YML
              echo "Pulse created: $pulse_file"
            else
              echo "No significant result — skipping pulse creation."
            fi
          else
            echo "No summary.json found — skipping pulse creation."
          fi

      - name: Commit results & pulses
        run: |
          git config user.name "phi-mesh-bot"
          git config user.email "actions@users.noreply.github.com"
          git pull --rebase
          git add -A
          git commit -m "auto: RGP-NS agent run" || echo "nothing to commit"
          git push

      - name: Refresh Tag Index & Map
        run: |
          python meta/update_tag_index.py
          if [ -f meta/generate_tag_map.py ]; then
            python meta/generate_tag_map.py
          elif [ -f build_tag_browser.py ]; then
            python build_tag_browser.py
          else
            echo "No map builder found; skipping map build."
          fi

      - name: Commit index & map
        run: |
          git pull --rebase
          git add -A
          git commit -m "auto: refresh tag index & map" || echo "nothing to commit"
          git push
